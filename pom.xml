<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.7.4</version> <!-- Ensure Spring Boot version is 2.7.4 -->
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>com.example</groupId>
    <artifactId>my-app</artifactId>
    <version>1.0-SNAPSHOT</version>
    <name>my-app</name>
    <url>http://www.example.com</url>

    <properties>
        <java.version>1.8</java.version> <!-- Explicitly set Java version to 1.8 -->
        <spring-boot.version>2.7.4</spring-boot.version> <!-- Spring Boot version -->
        <satoken.version>1.39.0</satoken.version> <!-- Align Sa-Token version here -->
        <lombok.version>1.18.26</lombok.version>
    </properties>

    <dependencies>
        <!-- Spring Boot Web (if you're building a web app) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- Spring Boot Redis (for Redis integration) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>

        <!-- <dependency>
            <groupId>cn.dev33</groupId>
            <artifactId>sa-token</artifactId>
            <version>${satoken.version}</version> 
        </dependency> -->
            
        <!-- Sa-Token Core Dependency (for session management) -->
        <dependency>
            <groupId>cn.dev33</groupId>
            <artifactId>sa-token-core</artifactId>
            <version>1.39.0</version> <!-- Sa-Token core version -->
        </dependency>

        <!-- 提供Redis连接池 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-pool2</artifactId>
        </dependency>


        <!-- Sa-Token Redis Dependency (for Redis storage) -->
        <dependency>
            <groupId>cn.dev33</groupId>
            <artifactId>sa-token-redis</artifactId>
            <version>1.39.0</version> <!-- Compatible Sa-Token Redis version -->
        </dependency>

        <!-- Sa-Token Redis DAO (for Redis with Jackson serialization) -->
        <dependency>
            <groupId>cn.dev33</groupId>
            <artifactId>sa-token-dao-redis-jackson</artifactId>
            <version>1.30.0</version> <!-- Align with Sa-Token core version -->
        </dependency>

        <!-- https://mvnrepository.com/artifact/cn.dev33/sa-token-alone-redis -->
        <dependency>
            <groupId>cn.dev33</groupId>
            <artifactId>sa-token-alone-redis</artifactId>
            <version>${satoken.version}</version>
        </dependency>
        <!-- Jedis Redis Client (optional, use Lettuce if preferred) -->
        <!-- If you choose Lettuce (default Spring Boot Redis Client), comment this out. -->
        <dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
            <version>3.7.0</version>
        </dependency>

        <!-- Spring Boot Starter Test (for testing) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- JUnit Jupiter for testing -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>5.7.1</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <!-- Compiler plugin to use Java 8 explicitly -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.9.0</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>

            <!-- Spring Boot Maven Plugin to repackage as an executable jar -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Unit test configuration -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.2</version>
                <configuration>
                    <argLine>-Dfile.encoding=UTF-8</argLine>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <repositories>
        <!-- Maven Central Repository -->
        <repository>
            <id>central</id>
            <url>https://repo.maven.apache.org/maven2</url>
        </repository>
         <!-- <repository>
            <id>hutool</id>
            <url>https://maven.hutool.cn/</url>
        </repository> -->
    </repositories>
</project>
